syntax = "proto3";
package raft_proto;

service RaftRpc {
  rpc AppendEntries (AppendEntriesRpcRequest) returns (AppendEntriesRpcReply);
  rpc VoteRequest (VoteRequestRpcRequest) returns (VoteRequestRpcReply);
  rpc InstallSnapshot (InstallSnapshotRpcRequest) returns (InstallSnapshotRpcReply);
  rpc ClientWrite (ClientWriteRpcRequest) returns (ClientWriteRpcReply);
  rpc ClientRead (ClientReadRpcRequest) returns (ClientReadRpcReply);
}

message AppendEntriesRpcRequest {
  string data = 1;
}

message AppendEntriesRpcReply {
  string data = 1;
}

message VoteRequestRpcRequest {
  string data = 1;
}

message VoteRequestRpcReply {
  string data = 1;
}

message InstallSnapshotRpcRequest {
  string data = 1;
}

message InstallSnapshotRpcReply {
  string data = 1;
}

message ClientWriteRpcRequest {
  string key = 1;
  string value = 2;
}
message ClientWriteRpcReply {
  optional uint64 leader_id = 1;
}

message ClientReadRpcRequest {
  string key = 1;
}
message ClientReadRpcReply {
  optional string value = 1;
  optional uint64 leader_id = 2;
}